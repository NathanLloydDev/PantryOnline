@model PantryOnline.Models.Recipe

@{
  ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
  <h4>Recipe</h4>
  <hr />
  <dl class="dl-horizontal">
    <dt>
      @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Name)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.PageNumber)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.PageNumber)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.MakeAhead)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.MakeAhead)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.LongerRecipe)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.LongerRecipe)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.GoodToFreeze)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.GoodToFreeze)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.IngredientsComplete)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.IngredientsComplete)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.StepsComplete)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.StepsComplete)
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.RecipeIngredients)
    </dt>
    <dd>
      <table class="table">
        <tr>
          <th>Name</th>
          <th>Quantity</th>
        </tr>
        @foreach (var item in Model.RecipeIngredients)
        {
          <tr>
            <td>
              @Html.DisplayFor(modelItem => item.Ingredient.Name)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Quantity)
            </td>
          </tr>
        }
      </table>
    </dd>
    <dt>
      @Html.DisplayNameFor(model => model.Book.Name)
    </dt>
    <dd>
      @Html.DisplayFor(model => model.Book.Name)
    </dd>
  </dl>
</div>
<div>
  <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
  <a asp-action="Index">Back to List</a>
</div>