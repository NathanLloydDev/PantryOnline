// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PantryOnline.Models;

namespace PantryOnline.Migrations
{
    [DbContext(typeof(PantryOnlineContext))]
    [Migration("20181210164611_4")]
    partial class _4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PantryOnline.Models.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("PantryOnline.Models.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostPer100g");

                    b.Property<string>("Name");

                    b.Property<int?>("TypeForeignKey");

                    b.Property<int?>("UnitForeignKey");

                    b.Property<double>("WeightPerUnit");

                    b.HasKey("ID");

                    b.HasIndex("TypeForeignKey");

                    b.HasIndex("UnitForeignKey");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("PantryOnline.Models.IngredientType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("IngredientType");
                });

            modelBuilder.Entity("PantryOnline.Models.Pantry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("UserForeignKey");

                    b.HasKey("ID");

                    b.HasIndex("UserForeignKey");

                    b.ToTable("Pantry");
                });

            modelBuilder.Entity("PantryOnline.Models.PantryIngredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientID");

                    b.Property<int>("PantryID");

                    b.HasKey("ID");

                    b.HasIndex("IngredientID");

                    b.HasIndex("PantryID");

                    b.ToTable("PantryIngredient");
                });

            modelBuilder.Entity("PantryOnline.Models.Recipe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookForeignKey");

                    b.Property<bool>("GoodToFreeze");

                    b.Property<bool>("IngredientsComplete");

                    b.Property<bool>("LongerRecipe");

                    b.Property<bool>("MakeAhead");

                    b.Property<string>("Name");

                    b.Property<int>("PageNumber");

                    b.Property<bool>("StepsComplete");

                    b.HasKey("ID");

                    b.HasIndex("BookForeignKey");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("PantryOnline.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientID");

                    b.Property<double>("Quantity");

                    b.Property<int>("RecipeID");

                    b.HasKey("ID");

                    b.HasIndex("IngredientID");

                    b.HasIndex("RecipeID");

                    b.ToTable("RecipeIngredient");
                });

            modelBuilder.Entity("PantryOnline.Models.Unit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation");

                    b.Property<bool>("IsBaseUnit");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("PantryOnline.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PantryOnline.Models.Ingredient", b =>
                {
                    b.HasOne("PantryOnline.Models.IngredientType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeForeignKey");

                    b.HasOne("PantryOnline.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitForeignKey");
                });

            modelBuilder.Entity("PantryOnline.Models.Pantry", b =>
                {
                    b.HasOne("PantryOnline.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserForeignKey");
                });

            modelBuilder.Entity("PantryOnline.Models.PantryIngredient", b =>
                {
                    b.HasOne("PantryOnline.Models.Ingredient", "Ingredient")
                        .WithMany("PantryIngredients")
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PantryOnline.Models.Pantry", "Pantry")
                        .WithMany("PantryIngredients")
                        .HasForeignKey("PantryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PantryOnline.Models.Recipe", b =>
                {
                    b.HasOne("PantryOnline.Models.Book", "Book")
                        .WithMany("Recipes")
                        .HasForeignKey("BookForeignKey");
                });

            modelBuilder.Entity("PantryOnline.Models.RecipeIngredient", b =>
                {
                    b.HasOne("PantryOnline.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PantryOnline.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
